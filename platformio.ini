; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
extra_configs = extra_defines.ini

[extra]
build_flags =
	;placeholder values, create a untracked extra_defines.ini file
	;in the project root directory(same level as platformio.ini)
	;so you can keep your custom setup defined by default on every pull
	; -DDREAM_STEAM_DISABLED
	; -DSINGLE_HX711_BOARD

[env]
check_tool = clangtidy, cppcheck
check_skip_packages = yes
check_flags =
	clangtidy: --checks=-*,cert-*,clang-analyzer-* --fix
	cppcheck: --enable=all --std=c++11 --suppress=*:*/.pio/* --suppress=*:*/lib/* --suppress=missingIncludeSystem --suppress=unmatchedSuppression --suppress=missingInclude --suppress=unusedFunction
platform_packages = tool-cppcheck@1.260.0

[env:lego-stlink]
extends = blackpill-core
lib_deps =
	${blackpill-core.lib_deps}
	https://github.com/banoz/MAX6675-library.git@^1.1.0
build_flags =
	${blackpill-core.build_flags}
	-DLEGO_VALVE_RELAY

[env:lego-forced-predictive-stlink]
extends = blackpill-core
lib_deps =
	${blackpill-core.lib_deps}
	https://github.com/banoz/MAX6675-library.git@^1.1.0
build_flags =
	${blackpill-core.build_flags}
	-DLEGO_VALVE_RELAY
	-DFORCE_PREDICTIVE_SCALES=1

[env:all-pcb-stlink]
extends = blackpill-core
lib_deps =
	${blackpill-core.lib_deps}
	adafruit/Adafruit MAX31855 library@1.3.0
build_type = release
build_flags =
	${blackpill-core.build_flags}
	-DSINGLE_BOARD
monitor_echo = true
monitor_filters =
  ; debug
  send_on_enter
monitor_eol = LF

[env:scales-calibration-stlink]
extends = blackpill-core
custom_src_dir = scales-calibration
build_flags =
	${blackpill-core.build_flags}
	;if using Vas' DUAL HX711 Board custom file needs to be defined
	${extra.build_flags}

[blackpill-core]
framework = arduino
platform = ststm32@16.0.0
board = blackpill_f411ce
extra_scripts =
	pre:scripts/auto-version.py
	pre:scripts/custom-src-dir.py
custom_src_dir = src
upload_protocol = stlink
debug_tool = stlink
monitor_speed = 115200
lib_compat_mode = strict
lib_deps =
	robtillaart/ADS1X15@0.3.7
	khoih-prog/FlashStorage_STM32@1.2.0
	powerbroker2/SerialTransfer@^3.1.3
	https://github.com/denyssene/SimpleKalmanFilter.git
	https://github.com/Zer0-bit/EasyNextionLibrary.git#1272a6de37f8aec60bd28941e2d96dc5f5613d0b
	https://github.com/banoz/PSM.Library.git#feature/timer
	https://github.com/banoz/HX711.git#feature/timer
	https://github.com/kc9zda/NCP5623.git
	https://github.com/Zer0-bit/Adafruit_VL53L0X.git
	https://github.com/JChristensen/movingAvg.git
	https://github.com/SomeLucky1/PCA9632.git
	nanopb/Nanopb@^0.4.7
	nanopb/Nanopb_Cpp@^0.1.10
build_flags =
	-DPIO_FRAMEWORK_ARDUINO_ENABLE_CDC
	-DUSBCON
	-DLOG_LEVEL=3
	; -DDEBUG_ENABLED
	;if using a bigger boilr machine like Silvia set -DDREAM_STEAM_DISABLED in the extra_defines.ini
	; Define the tof placeholder and init with 0
	${extra.build_flags}
	-DPIO_FRAMEWORK_ARDUINO_STANDARD_LIB
	-DENABLE_HWSERIAL2
	-DPB_WITHOUT_64BIT
	-DPIN_SERIAL2_RX=PA3
	-DPIN_SERIAL2_TX=PA2
	-DPIN_SERIAL1_RX=PA10
	-DPIN_SERIAL1_TX=PA9
	-DSERIAL_TX_BUFFER_SIZE=256
	-DSERIAL_RX_BUFFER_SIZE=256
	-DBEAUTIFY_GRAPH
	-O1
	-mcpu=cortex-m4
	-mfloat-abi=hard
	-mfpu=fpv4-sp-d16
build_unflags =
	-Os
build_src_flags =
	-Wdouble-promotion -Wall
check_src_filters =
	src
custom_nanopb_protos =
	+<lib/Common/proto/*.proto>

[env:test]
platform = native
test_framework = unity
build_flags = 
	-std=gnu++2a
	-DPB_WITHOUT_64BIT
	-DRUNNING_TESTS
  ${extra.test_build_flags}
lib_deps =
	ArduinoFake@^0.4.0
	powerbroker2/SerialTransfer@^3.1.3
	nanopb/Nanopb@^0.4.7
	nanopb/Nanopb_Cpp@^0.1.10
	mocks
	Common
lib_extra_dirs =
	test-lib
lib_compat_mode = off
custom_nanopb_protos =
	+<lib/Common/proto/*.proto>
build_unflags =
	-std=gnu++11
	-std=c++11

[env:single-cell-stlink]
extends = blackpill-core
custom_src_dir = single-scale-calibration
build_flags =
	${blackpill-core.build_flags}
	${extra.build_flags}
lib_deps =
  https://github.com/bogde/HX711.git
extra_scripts =
	pre:scripts/custom-src-dir.py

[env:webserver]
platform = espressif32
; board = lolin_s3
board = esp32-2432S028Rv3
framework = arduino
monitor_speed = 115200
upload_protocol = esptool
board_build.filesystem = littlefs
custom_src_dir = webserver
build_src_filter = +<*> -<web-interface>

build_flags =
	-std=gnu++17
	-DBOARD_HAS_PSRAM
	-DPB_WITHOUT_64BIT
	-DASYNCWEBSERVER_REGEX=1
	-mfix-esp32-psram-cache-issue
  ; -DTFT_INVERSION_ON
	-DRX1=16 ; for ESP32DEV
	-DTX1=17 ; for ESP32DEV
	; -DRX1=18 ; for lolin_s3 board
	; -DTX1=17 ; for lolin_s3 board
	-DLOG_LEVEL=3
  -D LV_CONF_PATH="${PROJECT_DIR}/webserver/include/lv_conf.h"
  -D CORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
  -DREMOTE_LOGGING
	${extra.build_flags}
check_src_filters =
	webserver/src

lib_deps =
	https://github.com/me-no-dev/AsyncTCP.git
	https://github.com/me-no-dev/ESPAsyncWebServer.git
	https://github.com/kstam/esp-arduino-ble-scales.git
	nanopb/Nanopb@^0.4.7
	nanopb/Nanopb_Cpp@^0.1.10
	ArduinoJSON@^6.21.2
	powerbroker2/SerialTransfer@^3.1.3
	Wire
  https://github.com/rzeldent/esp32-smartdisplay.git#develop
custom_nanopb_protos =
	+<lib/Common/proto/*.proto>
	+<webserver/src/persistence/proto/*.proto>


extra_scripts =
	pre:scripts/custom-src-dir.py
	webserver/replace_fs.py

build_unflags =
	-std=gnu++11
